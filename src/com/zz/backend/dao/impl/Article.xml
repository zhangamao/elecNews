<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.backend.model.Article">
	<insert id="add" parameterType="Article" keyProperty="id" useGeneratedKeys="true">
		insert into t_article 
		(title,source,content,author,keyword,intro,type,recommend,headline,topicId,createTime,updateTime,adminId) 
		values 
		(#{title},#{source},#{content},#{author},#{keyword},#{intro},#{type},#{recommend},#{headline},#{topicId},#{createTime},#{updateTime},#{adminId})
	</insert>
	<insert id="insert_channel_article" parameterType="map">
		insert into t_channel_article (channelId,articleId) values (#{c.id},#{a.id})
	</insert>
	<!-- 插入文章的ID和关键字的关联信息 -->
	<insert id="insert_article_keyword" parameterType="map">
		insert into t_article_keyword (articleId,keyword)
		values (#{articleId},#{keyword})
	</insert>
	<!-- 插入文章的附件 -->
	<insert id="insert_attachment" parameterType="Attachment">
		insert into t_attachment (articleId,name,contentType,uploadTime)
		values (#{articleId},#{name},#{contentType},#{uploadTime})
	</insert>
	
	<delete id="del" parameterType="int">
		delete from t_article where id = #{value}
	</delete>
	<delete id="del_channel_article" parameterType="int">
		delete from t_channel_article where articleId = #{articleId}
	</delete>
	<delete id="del_article_keyword" parameterType="int">
		delete from t_article_keyword where articleId = #{articleId}
	</delete>
	<!-- 根据文章的ID，删除所有与文章相关的附件 -->
	<delete id="del_attachments_by_articleId" parameterType="int">
		delete from t_attachment where articleId = #{articleId}
	</delete>
	<!-- 根据附件的ID，直接删除附件记录 -->
	<delete id="del_attachment_by_Id" parameterType="int">
		delete from t_attachment where id = #{id}
	</delete>
	
	<resultMap type="Article" id="findById-result">
		<!--
		在这里定义字段与属性之间的映射规则，如果字段与属性名一致，则无需定义，比如：
		author、keyword等等其它那些属性，因为和字段名一致，因此不需要显式定义映射规则。
		
		但下面这个id属性和id字段之间的映射必须写上，因为id字段既要用来映射id属性，也要
		用来映射channels属性！
		-->
		<result column="id" property="id"/>
		
		<!--
		利用collection来定义属性类型为集合的映射规则，通常需要发出第二条查询语句来查询集合
		的数据，select就是定义第二条查询语句的ID，那条查询语句将接收column字段所指定的值作为
		参数进行查询，并将查询结果自动设置到property所指定的属性中！  
		-->
		<collection property="channels" column="id" select="findChannelsByArticleId">
		</collection>
		<collection property="attachments" column="id" select="findAttachmentsByArticleId">
		</collection>
	</resultMap>
	<select id="findById" parameterType="int" resultMap="findById-result">
		select * from t_article where id = #{value}
	</select>
	<select id="findChannelsByArticleId" parameterType="int" resultType="Channel">
		select * from t_channel c,t_channel_article ca where c.id = ca.channelId
		and ca.articleId = #{articleId}
	</select>
	<select id="findAttachmentsByArticleId" parameterType="int" resultType="Attachment">
		select * from t_attachment where articleId = #{articleId}
	</select>
	
	<select id="findArticleByTitle" parameterType="map" resultType="Article">
		select * from t_article
		<if test="title != null">
		 where title like #{title}
		</if>
		order by createTime desc
		limit #{offset},#{pagesize}
	</select>
	<select id="findArticleByTitle-count" parameterType="map" resultType="int">
		select count(*) from t_article
		<if test="title != null">
		 where title like #{title}
		</if>
	</select>
	
	<select id="findArticleByChannel" parameterType="map" resultType="Article">
		<choose>
			<when test="c != null">
				select * from t_article a,t_channel_article ca where a.id = ca.articleId 
				and ca.channelId = #{c.id}
				order by createTime desc
				limit #{offset},#{pagesize}			
			</when>
			<otherwise>
				select * from t_article order by createTime desc limit #{offset},#{pagesize} 
			</otherwise>
		</choose>
	</select>
	<select id="findArticleByChannel-count" parameterType="map" resultType="int">
		<choose>
			<when test="c != null">
				select count(*) from t_article a,t_channel_article ca where a.id = ca.articleId 
				and ca.channelId = #{c.id}
			</when>
			<otherwise>
				select count(*) from t_article 
			</otherwise>
		</choose>
	</select>	
	<select id="findHeadline" parameterType="int" resultType="Article">
		select * from t_article where headline = true order by createTime desc limit 0,#{max}
	</select>
	<select id="findRecommend" parameterType="int" resultType="Article">
		select * from t_article where recommend = true order by createTime desc limit 0,#{max}
	</select>
	<select id="findAllRecommend" parameterType="map" resultType="Article">
		select * from t_article where recommend = true order by createTime desc limit #{offset},#{pagesize}
	</select>
	<select id="findAllRecommend-count" parameterType="map" resultType="int">
		select count(*) from t_article where recommend = true
	</select>
	<select id="findArticlesIdByKeyword" parameterType="map" resultType="int">
		select distinct articleId from t_article_keyword where keyword in (${keywords})
	</select>
	<select id="findArticlesByIds" parameterType="map" resultType="Article">
		select * from t_article where id in (${ids}) limit #{offset},#{pagesize}
	</select>
	<select id="findAttachmentById" parameterType="int" resultType="Attachment">
		select * from t_attachment where id = #{id}
	</select>
	
	<update id="update" parameterType="Article">
		update t_article set
		title = #{title},source=#{source},content=#{content},
		author=#{author},keyword=#{keyword},intro=#{intro},type=#{type},
		recommend=#{recommend},headline=#{headline},topicId=#{topicId},
		updateTime=#{updateTime},adminId=#{adminId}
		where id=#{id}
	</update>	
	<!-- 更新文章的留言数 -->
	<select id="selectLeaveNumber" parameterType="int" resultType="int">
		select leaveNumber from t_article where id = #{id}
	</select>
	<update id="updateLeaveNumber" parameterType="Article">
		update t_article set
		leaveNumber = #{leaveNumber}
		where id = #{id}
	</update>
	<!-- 更新文章的点击量 -->
	<select id="selectClickNumber" parameterType="int" resultType="int">
		select clickNumber from t_article where id = #{id}
	</select>
	<update id="updateClickNumber" parameterType="Article">
		update t_article set
		clickNumber = #{clickNumber}
		where id = #{id}
	</update>	
</mapper>
